pipeline {
    agent {
        label 'built-in-node'
    }
    stages {
        stage('Build') {
            steps {
                echo "Building the code"
                sh 'mvn -f jenkins/java-tomcat-sample/pom.xml clean package'
            }
            post {
                success {
                    echo "Archiving the artifacts..."
                    archiveArtifacts artifacts: '**/*.war'
                }
            }
        }   
        stage('Create Tomcat Image') {
            agent {
                label 'test-node'
            }
            steps {
                copyArtifacts filter: '**/*.war', fingerprintArtifacts: true, projectName: env.JOB_NAME, selector: specific(env.BUILD_NUMBER)
                echo "Building docker image"
                sh '''
                original_pwd=$(pwd -P)
                cd jenkins/java-tomcat-sample
                docker build -t localtomcatimg:$BUILD_NUMBER .
                cd $original_pwd
                sh '''
            }
        }
        stage('Deploy to Stagging Env') {
            agent {
                label 'test-node'
            }
            steps {
                echo "Running app on stagging env"
                sh '''
                docker stop tomcatInstanceStaging || true
                docker rm tomcatInstanceStaging || true
                docker run -itd --name tomcatInstanceStaging -p 8082:8080 localtomcatimg:$BUILD_NUMBER
                sh '''
            }
        }
    }
}
